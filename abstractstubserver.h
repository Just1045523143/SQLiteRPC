/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
#define JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_

#include <jsonrpccpp/server.h>

class AbstractStubServer : public jsonrpc::AbstractServer<AbstractStubServer>
{
    public:
        AbstractStubServer(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<AbstractStubServer>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("query", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_ARRAY, "sql",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::queryI);
            this->bindAndAddMethod(jsonrpc::Procedure("ping", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_STRING,  NULL), &AbstractStubServer::pingI);
        }

        inline virtual void queryI(const Json::Value &request, Json::Value &response)
        {
            response = this->query(request["sql"].asString());
        }
        inline virtual void pingI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->ping();
        }
        virtual Json::Value query(const std::string& sql) = 0;
        virtual std::string ping() = 0;
};

#endif //JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
